install.packages(readr)
install.packages("readr")
install.packages("dplyr")
library(readr)
library(dplyr)
graduados <- read_csv("/home/saviofcm/Downloads/graduados.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
head(graduados)
View(graduados)
View(graduados)
View(graduados)
str(graduados)
summary(graduados)
View(graduados)
graduados <- graduados %>%
arrange(matricula)
View(graduados)
View(graduados)
graduados.clean <- graduados %>%
filter(!is.na(media))
summary(graduados.clean)
View(graduados.clean)
graduados.cra <- graduados.clean %>%
group_by(matricula) %>%
mutate(cra.contrib = media*creditos) %>%
summarise(cra = sum(cra.contrib)/sum(creditos))
head(graduados.cra)
View(graduados.cra)
View(graduados.cra)
library(reshape2)
graduados.model.input <- graduados.clean %>%
group_by(matricula,disciplina)  %>%
filter(media == max(media)) %>%
ungroup() %>%
select(matricula,disciplina,media) %>%
mutate(disciplina = as.factor(gsub(" ",".",disciplina))) %>%
dcast(matricula ~ disciplina, mean) %>%
merge(graduados.cra)
head(graduados.model.input)
View(graduados.model.input)
# Tratamento de dados para preparar o arquivo de dados para o laboratório
require(data.table)
url='http://statweb.stanford.edu/~tibs/ElemStatLearn/datasets/prostate.data'
pcancer.orig = read.table(url, header=TRUE)
head(pcancer.orig)
# campos:
# vol: volume do cancer
# idade: idade do paciente
# hpb: hiperplasia prostática benigna
# ivs: invasão das vesículas seminais
# pc: penetração capsular
# gleason: escore Gleason
# pgg45: percentagem escore Gleason 4 ou 5
# psa: antígeno específico da próstata
pcancer = data.table(vol = exp(pcancer.orig$lcavol),
peso = exp(pcancer.orig$lweight),
idade = pcancer.orig$age,
hpb = exp(pcancer.orig$lbph),
ivs = pcancer.orig$svi,
pc = exp(pcancer.orig$lcp),
gleason = pcancer.orig$gleason,
pgg45 = pcancer.orig$pgg45,
train = pcancer.orig$train,
psa = exp(pcancer.orig$lpsa)
)
View(graduados.model.input)
View(graduados.model.input)
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
CRA = graduados.model.input$cra;
Calculo1 = graduados.model.input$Cálculo.Diferencial.e.Integral.I
Vetorial = graduados.model.input$Álgebra.Vetorial.e.Geometria.Analítica
LPT = graduados.model.input$Leitura.e.Produção.de.Textos
P1 = graduados.model.input$Programação.I
IC = graduados.model.input$Introdução.à.Computação
LP1 = graduados.model.input$Laboratório.de.Programação.I
Calculo2 = graduados.model.input$Cálculo.Diferencial.e.Integral.II
Discreta = graduados.model.input$Matemática.Discreta
P2 = graduados.model.input$Programação.II
Grafos = graduados.model.input$Teoria.dos.Grafos
FisicaClassica = graduados.model.input$Fundamentos.de.Física.Clássica
LP2 = graduados.model.input$Laboratório.de.Programação.II
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
reg_multipla_1_2_periodos
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
summary(reg_multipla_1_2_periodos)
install.packages("plotly")
source('~/Documentos/scriptRegressaoLinear.R')
install.packages(c("GGally", "(Links", "para", "um", "site", "externo)"))
install.packages("GGally")
ggpars (graduados.model.input)
ggpairs (graduados.model.input)
require(GGally)
ggpairs(graduados.model.input)
ggpairs(select(graduados.model.input,-matricula))
ggpairs(select(graduados.model.input,Calculo1,Vetorial,LPT,P1,IC,LP1))
cleanDados = graduados.model.input %>%
filter(!is.na())
is.na
is.na(NaN)
cleanDados = graduados.model.input %>%
filter(complete.cases())
cleanDados = graduados.model.input %>%
filter(complete.cases(graduados.model.input))
ggpairs(select(cleanDados,Calculo1,Vetorial,LPT,P1,IC,LP1))
View(cleanDados)
View(cleanDados)
View(cleanDados)
cleanDados = graduados.model.input %>%
filter(complete.cases(graduados.model.input))
primeiroPeriodo = select(cleanDados,Calculo1,Vetorial,LPT,P1,IC,LP1)
ggpairs(select(cleanDados,Cálculo.Diferencial.e.Integral.I,Álgebra.Vetorial.e.Geometria.Analítica,Leitura.e.Produção.de.Textos,Programação.I,Introdução.à.Computação,Laboratório.de.Programação.I))
ggpairs(select(cleanDados,Cálculo.Diferencial.e.Integral.I,Álgebra.Vetorial.e.Geometria.Analítica,Leitura.e.Produção.de.Textos,Programação.I,Introdução.à.Computação,Laboratório.de.Programação.I,cra))
select(cleanDados,Cálculo.Diferencial.e.Integral.I,Álgebra.Vetorial.e.Geometria.Analítica,Leitura.e.Produção.de.Textos,
Programação.I,Introdução.à.Computação,Laboratório.de.Programação.I,cra)
selectedData = select(cleanDados,
calculo1 = Cálculo.Diferencial.e.Integral.I,
vetorial = Álgebra.Vetorial.e.Geometria.Analítica,
lpt = Leitura.e.Produção.de.Textos,
p1 = Programação.I,
ic = Introdução.à.Computação,
lp1 = Laboratório.de.Programação.I,
cra)
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
View(selectedData)
View(selectedData)
periodo2 = select (cleanGraduados,
calculo2 = Cálculo.Diferencial.e.Integral.II,
discreta = Matemática.Discreta,
p2 = Programação.II,
grafos = Teoria.dos.Grafos,
fisicaclassica = Fundamentos.de.Física.Clássica,
lp2 = Laboratório.de.Programação.II)
cleanGraduados = graduados.model.input %>%
filter(complete.cases(graduados.model.input))
periodo2 = select (cleanGraduados,
calculo2 = Cálculo.Diferencial.e.Integral.II,
discreta = Matemática.Discreta,
p2 = Programação.II,
grafos = Teoria.dos.Grafos,
fisicaclassica = Fundamentos.de.Física.Clássica,
lp2 = Laboratório.de.Programação.II)
ggpairs(periodo1 + periodo2 - matricula)
periodo1 = select(cleanGraduados,
calculo1 = Cálculo.Diferencial.e.Integral.I,
vetorial = Álgebra.Vetorial.e.Geometria.Analítica,
lpt = Leitura.e.Produção.de.Textos,
p1 = Programação.I,
ic = Introdução.à.Computação,
lp1 = Laboratório.de.Programação.I,
cra)
periodo2 = select (cleanGraduados,
calculo2 = Cálculo.Diferencial.e.Integral.II,
discreta = Matemática.Discreta,
p2 = Programação.II,
grafos = Teoria.dos.Grafos,
fisicaclassica = Fundamentos.de.Física.Clássica,
lp2 = Laboratório.de.Programação.II)
reg_multipla_1_2_periodos = lm (CRA ~ Calculo1 + Vetorial + LPT + P1 + IC + LP1 + Calculo2 + Discreta + P2 + Grafos + FisicaClassica + LP2)
summary(reg_multipla_1_2_periodos)
require(GGally)
ggpairs(periodo1 + periodo2 - matricula)
ggpairs(periodo1,periodo2)
install.packages("readr")
install.packages("dplyr")
library(readr)
library(dplyr)
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
head(graduados)
str(graduados)
summary(graduados)
View(graduados)
graduados <- graduados %>% arrange(matricula)
source('~/workspace/R/Parte3/parte3.R')
source('~/workspace/R/Parte3/parte3.R')
graduados <- graduados %>% arrange(matricula)
source('~/workspace/R/Parte3/parte3.R', echo=TRUE)
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(ALU_NOVAMATRICULA))
View(graduados)
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
library(readr)
library(dplyr)
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(matricula))
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(matricula = col_character())) %>%
mutate(matricula = as.factor(ALU_NOVAMATRICULA))
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(matricula = as.factor(ALU_NOVAMATRICULA))
ahead(graduados)
library(readr)
library(dplyr)
setwd("/home/saviofcm/workspace/R/Parte3")
graduados <- read_csv("graduados_treino.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(matricula = as.factor(ALU_NOVAMATRICULA))
head(graduados)
str(graduados)
summary(graduados)
View(graduados)
graduados.clean <- graduados %>%
filter(!is.na(media))
graduados.clean <- graduados %>%
filter(!is.na(MAT_MEDIA_FINAL))
summary(graduados.clean)
View(graduados.clean)
View(graduados.clean)
graduados.cra <- graduados.clean %>%
group_by(ALU_NOVAMATRICULA) %>%
mutate(cra.contrib = MAT_MEDIA_FINAL*CREDITOS) %>%
summarise(cra = sum(cra.contrib)/sum(CREDITOS))
head(graduados.cra)
View(graduados.cra)
View(graduados.cra)
graduados.model.input <- graduados.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(media == max(media)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(graduados.cra)
graduados.model.input <- graduados.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(media == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(graduados.cra)
graduados.model.input <- graduados.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(graduados.cra)
library(reshape2)
graduados.model.input <- graduados.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(graduados.cra)
head(graduados.model.input)
View(graduados.model.input)
